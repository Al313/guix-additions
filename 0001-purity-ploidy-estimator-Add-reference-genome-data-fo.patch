From f9b450b0e08f728008efe293be46dbb875f8a409 Mon Sep 17 00:00:00 2001
From: Roel Janssen <roel@gnu.org>
Date: Thu, 20 Jun 2019 10:52:48 +0200
Subject: [PATCH] purity-ploidy-estimator: Add reference genome data for mm10.

* purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java:
  register files for mm10.
* hmf-common/src/main/resources/refgenome/mm10_centromere.tsv: New file.
* hmf-common/src/main/resources/refgenome/mm10_len.tsv: New file.
* purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java:
  Adjust error messages.
---
 .../hmftools/common/refgenome/RefGenome.java  |  7 ++++++-
 .../resources/refgenome/mm10_centromere.tsv   | 21 +++++++++++++++++++
 .../src/main/resources/refgenome/mm10_len.tsv | 21 +++++++++++++++++++
 .../hmftools/purple/config/RefGenomeData.java |  8 +++----
 4 files changed, 52 insertions(+), 5 deletions(-)
 create mode 100644 hmf-common/src/main/resources/refgenome/mm10_centromere.tsv
 create mode 100644 hmf-common/src/main/resources/refgenome/mm10_len.tsv

diff --git a/hmf-common/src/main/java/com/hartwig/hmftools/common/refgenome/RefGenome.java b/hmf-common/src/main/java/com/hartwig/hmftools/common/refgenome/RefGenome.java
index 15414476c..3868448cd 100644
--- a/hmf-common/src/main/java/com/hartwig/hmftools/common/refgenome/RefGenome.java
+++ b/hmf-common/src/main/java/com/hartwig/hmftools/common/refgenome/RefGenome.java
@@ -16,7 +16,8 @@ import org.jetbrains.annotations.NotNull;
 
 public enum RefGenome {
     HG19(fromResource("hg19_len.tsv"), fromResource("hg19_centromere.tsv")),
-    HG38(fromResource("hg38_len.tsv"), fromResource("hg38_centromere.tsv"));
+    HG38(fromResource("hg38_len.tsv"), fromResource("hg38_centromere.tsv")),
+    MM10(fromResource("mm10_len.tsv"), fromResource("mm10_centromere.tsv"));
 
     @NotNull
     private final Map<Chromosome, Long> lengths;
@@ -50,6 +51,10 @@ public enum RefGenome {
             return Optional.of(HG38);
         }
 
+        if (length.equals(MM10.lengths())) {
+            return Optional.of(MM10);
+        }
+
         return Optional.empty();
     }
 
diff --git a/hmf-common/src/main/resources/refgenome/mm10_centromere.tsv b/hmf-common/src/main/resources/refgenome/mm10_centromere.tsv
new file mode 100644
index 000000000..de68d4e40
--- /dev/null
+++ b/hmf-common/src/main/resources/refgenome/mm10_centromere.tsv
@@ -0,0 +1,21 @@
+1	97735985
+2	91056612
+3	80019840
+4	78254058
+5	75917342
+6	74868273
+7	72720729
+8	64700606
+9	62297555
+10	65347496
+11	61041271
+12	60064511
+13	60210819
+14	62451122
+15	52021842
+16	49103884
+17	47493635
+18	45351319
+19	30715783
+X	85515649
+Y	45872349
\ No newline at end of file
diff --git a/hmf-common/src/main/resources/refgenome/mm10_len.tsv b/hmf-common/src/main/resources/refgenome/mm10_len.tsv
new file mode 100644
index 000000000..71abbaa7c
--- /dev/null
+++ b/hmf-common/src/main/resources/refgenome/mm10_len.tsv
@@ -0,0 +1,21 @@
+1	195471971
+2	182113224
+3	160039680
+4	156508116
+5	151834684
+6	149736546
+7	145441459
+8	129401213
+9	124595110
+10	130694993
+11	122082543
+12	120129022
+13	120421639
+14	124902244
+15	104043685
+16	98207768
+17	94987271
+18	90702639
+19	61431566
+X	171031299
+Y	91744698
\ No newline at end of file
diff --git a/purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java b/purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java
index 02fecb173..580ee533d 100644
--- a/purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java
+++ b/purity-ploidy-estimator/src/main/java/com/hartwig/hmftools/purple/config/RefGenomeData.java
@@ -37,7 +37,7 @@ public interface RefGenomeData {
     static void addOptions(@NotNull Options options) {
         options.addOption(REF_GENOME,
                 true,
-                "Reference genome to use. Will attempt to detect using cobalt chromosome lengths, otherwise must be either \"hg19\" or \"hg38\".");
+                "Reference genome to use. Will attempt to detect using cobalt chromosome lengths, otherwise must be either \"hg19\", \"hg38\" or \"mm10\".");
     }
 
     @NotNull
@@ -57,7 +57,7 @@ public interface RefGenomeData {
 
         if (cobaltData.chromosomeLengthsEstimated() && !cmd.hasOption(REF_GENOME)) {
             throw new ParseException(
-                    "Cobalt chromosome information unavailable. You must specify -" + REF_GENOME + " as either \"hg19\" or \"hg38\".");
+                    "Cobalt chromosome information unavailable. You must specify -" + REF_GENOME + " as either \"hg19\", \"hg38\" or \"mm10\".");
         }
 
         final Map<Chromosome, GenomePosition> lengthPositions = cobaltData.chromosomeLengths();
@@ -71,7 +71,7 @@ public interface RefGenomeData {
             try {
                 suppliedGenome = Optional.of(RefGenome.valueOf(cmd.getOptionValue(REF_GENOME).toUpperCase()));
             } catch (Exception e) {
-                throw new ParseException("Unknown ref genome " + cmd.getOptionValue(REF_GENOME) + ". Must be either \"hg19\" or \"hg38\".");
+                throw new ParseException("Unknown ref genome " + cmd.getOptionValue(REF_GENOME) + ". Must be either \"hg19\", \"hg38\" or \"mm10\".");
             }
         } else {
             suppliedGenome = Optional.empty();
@@ -89,7 +89,7 @@ public interface RefGenomeData {
             LOGGER.info("Using {} parameter: {}", REF_GENOME, refGenome);
         } else {
             throw new ParseException("Unable to detect ref genome. Please specify " + cmd.getOptionValue(REF_GENOME)
-                    + " parameter as one of \"hg19\" or \"hg38\". ");
+                    + " parameter as one of \"hg19\", \"hg38\" or \"mm10\". ");
         }
 
         final List<HmfTranscriptRegion> rawGenePanel =
-- 
2.17.1

